digraph "mlir::Op&lt; ConcreteType, Traits &gt;"
{
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node27 [label="mlir::Op\< ConcreteType,\l Traits \>",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node28 -> Node27 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node28 [label="mlir::OpState",height=0.2,width=0.4,color="black",URL="$classmlir_1_1OpState.html",tooltip="This is the concrete base class that holds the operation pointer and has non-generic methods that onl..."];
  Node29 -> Node27 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node29 [label="Traits\< ConcreteType \>",height=0.2,width=0.4,color="grey75"];
  Node30 -> Node27 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node30 [label="mlir::FoldingHook\<\l ConcreteType, llvm\l::is_one_of\< OpTrait\l::OneResult\< ConcreteType\l \>, Traits\< ConcreteType\l \>... \>::value \>",height=0.2,width=0.4,color="black",URL="$classmlir_1_1FoldingHook.html"];
  Node31 -> Node30 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< ConcreteType, llvm\l::is_one_of\< OpTrait\l::OneResult\< ConcreteType\l \>, Traits\< ConcreteType\l \>... \>::value \>" ,fontname="Helvetica"];
  Node31 [label="mlir::FoldingHook\<\l ConcreteType, isSingleResult,\l typename \>",height=0.2,width=0.4,color="black",URL="$classmlir_1_1FoldingHook.html",tooltip="This template defines the foldHook as used by AbstractOperation. "];
}
