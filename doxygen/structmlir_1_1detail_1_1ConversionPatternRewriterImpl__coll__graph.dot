digraph "mlir::detail::ConversionPatternRewriterImpl"
{
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="mlir::detail::Conversion\lPatternRewriterImpl",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" argConverter" ,fontname="Helvetica"];
  Node2 [label="anonymous:argConverter",height=0.2,width=0.4,color="grey75",tooltip="This class provides a simple interface for converting the types of block arguments. "];
  Node3 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" rootUpdates" ,fontname="Helvetica"];
  Node3 [label="llvm::SmallVector\<\l OperationTransactionState, 4 \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVector.html"];
  Node4 -> Node3 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< OperationTransactionState, 4 \>" ,fontname="Helvetica"];
  Node4 [label="llvm::SmallVector\<\l T, N \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVector.html"];
  Node5 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ignoredOps" ,fontname="Helvetica"];
  Node5 [label="SetVector\< mlir::Operation * \>",height=0.2,width=0.4,color="grey75"];
  Node6 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" createdOps" ,fontname="Helvetica"];
  Node6 [label="vector\< mlir::Operation * \>",height=0.2,width=0.4,color="grey75"];
  Node7 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" replacements" ,fontname="Helvetica"];
  Node7 [label="llvm::SmallVector\<\l mlir::detail::ConversionPattern\lRewriterImpl::OpReplacement, 4 \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVector.html"];
  Node4 -> Node7 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< mlir::detail::Conversion\lPatternRewriterImpl::OpReplacement, 4 \>" ,fontname="Helvetica"];
  Node8 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" logger" ,fontname="Helvetica"];
  Node8 [label="ScopedPrinter",height=0.2,width=0.4,color="grey75"];
  Node9 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" pendingRootUpdates" ,fontname="Helvetica"];
  Node9 [label="llvm::SmallPtrSet\<\l mlir::Operation *, 1 \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallPtrSet.html"];
  Node10 -> Node9 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< mlir::Operation *, 1 \>" ,fontname="Helvetica"];
  Node10 [label="llvm::SmallPtrSet\<\l T, N \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallPtrSet.html"];
  Node11 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" mapping" ,fontname="Helvetica"];
  Node11 [label="anonymous:mapping",height=0.2,width=0.4,color="grey75",tooltip="This class wraps a BlockAndValueMapping to provide recursive lookup functionality, i.e. "];
  Node12 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" blockActions" ,fontname="Helvetica"];
  Node12 [label="llvm::SmallVector\<\l mlir::detail::ConversionPattern\lRewriterImpl::BlockAction, 4 \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVector.html"];
  Node4 -> Node12 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< mlir::detail::Conversion\lPatternRewriterImpl::BlockAction, 4 \>" ,fontname="Helvetica"];
}
