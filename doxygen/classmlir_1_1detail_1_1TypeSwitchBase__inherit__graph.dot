digraph "mlir::detail::TypeSwitchBase&lt; DerivedT, T &gt;"
{
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node0 [label="mlir::detail::TypeSwitch\lBase\< DerivedT, T \>",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node0 -> Node1 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< TypeSwitch\< T, void\l \>, T \>" ,fontname="Helvetica"];
  Node1 [label="mlir::detail::TypeSwitch\lBase\< TypeSwitch\< T, void\l \>, T \>",height=0.2,width=0.4,color="black",URL="$classmlir_1_1detail_1_1TypeSwitchBase.html"];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="mlir::TypeSwitch\< T,\l void \>",height=0.2,width=0.4,color="black",URL="$classmlir_1_1TypeSwitch_3_01T_00_01void_01_4.html",tooltip="Specialization of TypeSwitch for void returning callables. "];
  Node0 -> Node3 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< TypeSwitch\< T, ResultT\l \>, T \>" ,fontname="Helvetica"];
  Node3 [label="mlir::detail::TypeSwitch\lBase\< TypeSwitch\< T, ResultT\l \>, T \>",height=0.2,width=0.4,color="black",URL="$classmlir_1_1detail_1_1TypeSwitchBase.html"];
  Node3 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="mlir::TypeSwitch\< T,\l ResultT \>",height=0.2,width=0.4,color="black",URL="$classmlir_1_1TypeSwitch.html",tooltip="This class implements a switch-like dispatch statement for a value of &#39;T&#39; using dyn_cast functionalit..."];
}
