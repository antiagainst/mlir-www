digraph "mlir::DenseElementsAttr::AttributeElementIterator"
{
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node0 [label="mlir::DenseElementsAttr\l::AttributeElementIterator",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node0 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 [label="mlir::indexed_accessor\l_iterator\< AttributeElementIterator,\l const void *, Attribute, Attribute,\l Attribute \>",height=0.2,width=0.4,color="black",URL="$classmlir_1_1indexed__accessor__iterator.html"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="llvm::iterator_facade\l_base\< AttributeElementIterator,\l std::random_access_iterator\l_tag, Attribute, std::ptrdiff\l_t, Attribute, Attribute \>",height=0.2,width=0.4,color="grey75"];
  Node3 -> Node1 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< AttributeElementIterator,\l const void *, Attribute,\l Attribute, Attribute \>" ,fontname="Helvetica"];
  Node3 [label="mlir::indexed_accessor\l_iterator\< DerivedT, BaseT,\l T, PointerT, ReferenceT \>",height=0.2,width=0.4,color="black",URL="$classmlir_1_1indexed__accessor__iterator.html",tooltip="A utility class used to implement an iterator that contains some base object and an index..."];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="llvm::iterator_facade\l_base\< DerivedT, std\l::random_access_iterator\l_tag, T, std::ptrdiff_t,\l PointerT, ReferenceT \>",height=0.2,width=0.4,color="grey75"];
}
