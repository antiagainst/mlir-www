digraph "mlir::DenseElementsAttr::ElementIterator&lt; T &gt;"
{
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node9 [label="mlir::DenseElementsAttr\l::ElementIterator\< T \>",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node10 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="mlir::detail::DenseElement\lIndexedIteratorImpl\< ElementIterator\l\< T \>, const T \>",height=0.2,width=0.4,color="black",URL="$classmlir_1_1detail_1_1DenseElementIndexedIteratorImpl.html"];
  Node11 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="mlir::indexed_accessor\l_iterator\< ElementIterator\l\< T \>, DenseIterPtrAndSplat,\l const T, const T *, const T & \>",height=0.2,width=0.4,color="black",URL="$classmlir_1_1indexed__accessor__iterator.html"];
  Node12 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="llvm::iterator_facade\l_base\< ElementIterator\l\< T \> , std::random_access\l_iterator_tag, const T , std\l::ptrdiff_t, const T * , const T &  \>",height=0.2,width=0.4,color="grey75"];
  Node13 -> Node11 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" index" ,fontname="Helvetica"];
  Node13 [label="ptrdiff_t",height=0.2,width=0.4,color="black",URL="$classptrdiff__t.html"];
  Node14 -> Node11 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" base" ,fontname="Helvetica"];
  Node14 [label="DenseIterPtrAndSplat",height=0.2,width=0.4,color="black",URL="$classDenseIterPtrAndSplat.html"];
  Node15 -> Node11 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< ElementIterator\<\l T \>, DenseIterPtrAndSplat,\l const T, const T *, const T & \>" ,fontname="Helvetica"];
  Node15 [label="mlir::indexed_accessor\l_iterator\< DerivedT, BaseT,\l T, PointerT, ReferenceT \>",height=0.2,width=0.4,color="black",URL="$classmlir_1_1indexed__accessor__iterator.html",tooltip="A utility class used to implement an iterator that contains some base object and an index..."];
  Node16 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 [label="llvm::iterator_facade\l_base\< DerivedT, std\l::random_access_iterator\l_tag, T, std::ptrdiff_t,\l PointerT, ReferenceT \>",height=0.2,width=0.4,color="grey75"];
  Node13 -> Node15 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" index" ,fontname="Helvetica"];
  Node17 -> Node15 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" base" ,fontname="Helvetica"];
  Node17 [label="BaseT",height=0.2,width=0.4,color="grey75"];
  Node18 -> Node10 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< ElementIterator\<\l T \>, const T \>" ,fontname="Helvetica"];
  Node18 [label="mlir::detail::DenseElement\lIndexedIteratorImpl\< ConcreteT,\l T, PointerT, ReferenceT \>",height=0.2,width=0.4,color="black",URL="$classmlir_1_1detail_1_1DenseElementIndexedIteratorImpl.html",tooltip="Impl iterator for indexed DenseElementAttr iterators that records a data pointer and data index that ..."];
  Node19 -> Node18 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 [label="mlir::indexed_accessor\l_iterator\< ConcreteT,\l DenseIterPtrAndSplat,\l T, PointerT, ReferenceT \>",height=0.2,width=0.4,color="black",URL="$classmlir_1_1indexed__accessor__iterator.html"];
  Node20 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 [label="llvm::iterator_facade\l_base\< ConcreteT, std\l::random_access_iterator\l_tag, T, std::ptrdiff_t,\l PointerT, ReferenceT \>",height=0.2,width=0.4,color="grey75"];
  Node13 -> Node19 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" index" ,fontname="Helvetica"];
  Node14 -> Node19 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" base" ,fontname="Helvetica"];
  Node15 -> Node19 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< ConcreteT, DenseIterPtr\lAndSplat, T, PointerT,\l ReferenceT \>" ,fontname="Helvetica"];
}
