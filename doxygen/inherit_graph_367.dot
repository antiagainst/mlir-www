digraph "Graphical Class Hierarchy"
{
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node493 [label="iterator_facade_base",height=0.2,width=0.4,color="grey75"];
  Node493 -> Node0 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node0 [label="mlir::indexed_accessor\l_iterator\< AttributeElementIterator,\l const void *, Attribute, Attribute,\l Attribute \>",height=0.2,width=0.4,color="black",URL="$classmlir_1_1indexed__accessor__iterator.html"];
  Node0 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 [label="mlir::DenseElementsAttr\l::AttributeElementIterator",height=0.2,width=0.4,color="black",URL="$classmlir_1_1DenseElementsAttr_1_1AttributeElementIterator.html",tooltip="A utility iterator that allows walking over the internal Attribute values of a DenseElementsAttr. "];
  Node493 -> Node496 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node496 [label="mlir::indexed_accessor\l_iterator\< BoolElementIterator,\l DenseIterPtrAndSplat, bool,\l bool, bool \>",height=0.2,width=0.4,color="black",URL="$classmlir_1_1indexed__accessor__iterator.html"];
  Node496 -> Node497 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node497 [label="mlir::detail::DenseElement\lIndexedIteratorImpl\< BoolElement\lIterator, bool, bool, bool \>",height=0.2,width=0.4,color="black",URL="$classmlir_1_1detail_1_1DenseElementIndexedIteratorImpl.html"];
  Node497 -> Node498 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node498 [label="mlir::DenseElementsAttr\l::BoolElementIterator",height=0.2,width=0.4,color="black",URL="$classmlir_1_1DenseElementsAttr_1_1BoolElementIterator.html",tooltip="A utility iterator that allows walking over the internal bool values. "];
  Node493 -> Node499 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node499 [label="mlir::indexed_accessor\l_iterator\< ConcreteT,\l DenseIterPtrAndSplat,\l T, PointerT, ReferenceT \>",height=0.2,width=0.4,color="black",URL="$classmlir_1_1indexed__accessor__iterator.html"];
  Node499 -> Node500 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node500 [label="mlir::detail::DenseElement\lIndexedIteratorImpl\< ConcreteT,\l T, PointerT, ReferenceT \>",height=0.2,width=0.4,color="black",URL="$classmlir_1_1detail_1_1DenseElementIndexedIteratorImpl.html",tooltip="Impl iterator for indexed DenseElementAttr iterators that records a data pointer and data index that ..."];
  Node493 -> Node501 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node501 [label="mlir::indexed_accessor\l_iterator\< ElementIterator\l\< T \>, DenseIterPtrAndSplat,\l const T, const T *, const T & \>",height=0.2,width=0.4,color="black",URL="$classmlir_1_1indexed__accessor__iterator.html"];
  Node501 -> Node502 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node502 [label="mlir::detail::DenseElement\lIndexedIteratorImpl\< ElementIterator\l\< T \>, const T \>",height=0.2,width=0.4,color="black",URL="$classmlir_1_1detail_1_1DenseElementIndexedIteratorImpl.html"];
  Node502 -> Node503 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node503 [label="mlir::DenseElementsAttr\l::ElementIterator\< T \>",height=0.2,width=0.4,color="black",URL="$classmlir_1_1DenseElementsAttr_1_1ElementIterator.html",tooltip="Iterator for walking raw element values of the specified type &#39;T&#39;, which may be any c++ data type mat..."];
  Node493 -> Node504 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node504 [label="mlir::indexed_accessor\l_iterator\< IntElementIterator,\l DenseIterPtrAndSplat, APInt,\l APInt, APInt \>",height=0.2,width=0.4,color="black",URL="$classmlir_1_1indexed__accessor__iterator.html"];
  Node504 -> Node505 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node505 [label="mlir::detail::DenseElement\lIndexedIteratorImpl\< IntElement\lIterator, APInt, APInt, APInt \>",height=0.2,width=0.4,color="black",URL="$classmlir_1_1detail_1_1DenseElementIndexedIteratorImpl.html"];
  Node505 -> Node506 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node506 [label="mlir::DenseElementsAttr\l::IntElementIterator",height=0.2,width=0.4,color="black",URL="$classmlir_1_1DenseElementsAttr_1_1IntElementIterator.html",tooltip="A utility iterator that allows walking over the internal raw APInt values. "];
  Node493 -> Node507 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node507 [label="mlir::indexed_accessor\l_iterator\< iterator, BaseT,\l T, PointerT, ReferenceT \>",height=0.2,width=0.4,color="black",URL="$classmlir_1_1indexed__accessor__iterator.html"];
  Node507 -> Node508 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node508 [label="mlir::detail::indexed\l_accessor_range_base\l\< DerivedT, BaseT, T,\l PointerT, ReferenceT \>\l::iterator",height=0.2,width=0.4,color="black",URL="$classmlir_1_1detail_1_1indexed__accessor__range__base_1_1iterator.html",tooltip="An iterator element of this range. "];
  Node493 -> Node509 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node509 [label="mlir::detail::ElementsAttr\lIterator\< T \>",height=0.2,width=0.4,color="black",URL="$classmlir_1_1detail_1_1ElementsAttrIterator.html",tooltip="This class represents a general iterator over the values of an ElementsAttr. "];
  Node493 -> Node510 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node510 [label="mlir::detail::ValueUseIterator\lImpl\< DerivedT, OperandType \>",height=0.2,width=0.4,color="black",URL="$classmlir_1_1detail_1_1ValueUseIteratorImpl.html",tooltip="A base iterator class that allows for iterating over the uses of a value. "];
  Node493 -> Node511 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node511 [label="mlir::indexed_accessor\l_iterator\< DerivedT, BaseT,\l T, PointerT, ReferenceT \>",height=0.2,width=0.4,color="black",URL="$classmlir_1_1indexed__accessor__iterator.html",tooltip="A utility class used to implement an iterator that contains some base object and an index..."];
  Node493 -> Node512 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node512 [label="mlir::detail::ValueUseIterator\lImpl\< FilteredValueUseIterator\l\< OperandType \>, OperandType \>",height=0.2,width=0.4,color="black",URL="$classmlir_1_1detail_1_1ValueUseIteratorImpl.html"];
  Node512 -> Node513 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node513 [label="mlir::FilteredValueUseIterator\l\< OperandType \>",height=0.2,width=0.4,color="black",URL="$classmlir_1_1FilteredValueUseIterator.html",tooltip="This class represents an iterator of the uses of a IR object that optionally filters on a specific su..."];
  Node493 -> Node514 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node514 [label="mlir::detail::ValueUseIterator\lImpl\< ValueUseIterator\< OperandType\l \>, OperandType \>",height=0.2,width=0.4,color="black",URL="$classmlir_1_1detail_1_1ValueUseIteratorImpl.html"];
  Node514 -> Node515 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node515 [label="mlir::ValueUseIterator\l\< OperandType \>",height=0.2,width=0.4,color="black",URL="$classmlir_1_1ValueUseIterator.html",tooltip="An iterator over all of the uses of an IR object. "];
}
