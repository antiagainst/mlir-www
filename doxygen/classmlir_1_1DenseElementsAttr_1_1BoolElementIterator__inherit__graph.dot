digraph "mlir::DenseElementsAttr::BoolElementIterator"
{
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node0 [label="mlir::DenseElementsAttr\l::BoolElementIterator",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node0 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 [label="mlir::detail::DenseElement\lIndexedIteratorImpl\< BoolElement\lIterator, bool, bool, bool \>",height=0.2,width=0.4,color="black",URL="$classmlir_1_1detail_1_1DenseElementIndexedIteratorImpl.html"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="mlir::indexed_accessor\l_iterator\< BoolElementIterator,\l DenseIterPtrAndSplat, bool,\l bool, bool \>",height=0.2,width=0.4,color="black",URL="$classmlir_1_1indexed__accessor__iterator.html"];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="llvm::iterator_facade\l_base\< BoolElementIterator,\l std::random_access_iterator\l_tag, bool, std::ptrdiff_t,\l bool, bool \>",height=0.2,width=0.4,color="grey75"];
  Node4 -> Node2 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< BoolElementIterator,\l DenseIterPtrAndSplat,\l bool, bool, bool \>" ,fontname="Helvetica"];
  Node4 [label="mlir::indexed_accessor\l_iterator\< DerivedT, BaseT,\l T, PointerT, ReferenceT \>",height=0.2,width=0.4,color="black",URL="$classmlir_1_1indexed__accessor__iterator.html",tooltip="A utility class used to implement an iterator that contains some base object and an index..."];
  Node5 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="llvm::iterator_facade\l_base\< DerivedT, std\l::random_access_iterator\l_tag, T, std::ptrdiff_t,\l PointerT, ReferenceT \>",height=0.2,width=0.4,color="grey75"];
  Node6 -> Node1 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< BoolElementIterator,\l bool, bool, bool \>" ,fontname="Helvetica"];
  Node6 [label="mlir::detail::DenseElement\lIndexedIteratorImpl\< ConcreteT,\l T, PointerT, ReferenceT \>",height=0.2,width=0.4,color="black",URL="$classmlir_1_1detail_1_1DenseElementIndexedIteratorImpl.html",tooltip="Impl iterator for indexed DenseElementAttr iterators that records a data pointer and data index that ..."];
  Node7 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="mlir::indexed_accessor\l_iterator\< ConcreteT,\l DenseIterPtrAndSplat,\l T, PointerT, ReferenceT \>",height=0.2,width=0.4,color="black",URL="$classmlir_1_1indexed__accessor__iterator.html"];
  Node8 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="llvm::iterator_facade\l_base\< ConcreteT, std\l::random_access_iterator\l_tag, T, std::ptrdiff_t,\l PointerT, ReferenceT \>",height=0.2,width=0.4,color="grey75"];
  Node4 -> Node7 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< ConcreteT, DenseIterPtr\lAndSplat, T, PointerT,\l ReferenceT \>" ,fontname="Helvetica"];
}
